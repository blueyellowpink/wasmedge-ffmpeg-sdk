type Pointer = u64

avformat-alloc-context: func() -> Pointer
avformat-free-context: func(avformat-context: Pointer) -> unit
avformat-get-context: func(avformat-context: Pointer) -> u64
avformat-open-input: func(avformat-context: Pointer, filename: string) -> u32
avformat-find-stream-info: func(avformat-context: Pointer) -> u32
avformat-get-nb-streams: func(avformat-context: Pointer) -> u32
avformat-get-stream: func(avformat-context: Pointer, index: u32) -> Pointer
avformat-alloc-output-context2: func(avformat-context: Pointer, filename: string) -> Pointer
avformat-new-stream: func(avformat-context: Pointer) -> Pointer
avformat-write-header: func(avformat-context: Pointer) -> u32
avformat-close-input: func(avformat-context: Pointer) -> unit

avstream-codecpar: func(avstream: Pointer) -> Pointer

avcodec-params-codec-type: func(avcodec-param: Pointer) -> u32
avcodec-params-copy: func(dst: Pointer, src: Pointer) -> u32

av-dump-format: func(avformat-context: Pointer, index: u32, filename: string, is-output: u32) -> unit
av-read-frame: func(avformat-context: Pointer, avpacket: Pointer) -> u32
av-packet: func() -> Pointer
av-packet-unref: func(avpacket: Pointer) -> unit
av-packet-stream-index: func(avpacket: Pointer) -> u32
av-interleaved-write-frame: func(avformat-context: Pointer, avpacket: Pointer) -> u32
av-write-trailer: func(avformat-context: Pointer) -> u32

copy-packet: func(input-avformat-context: Pointer, output-avformat-context: Pointer, avpacket: Pointer, streams-list-index: u32) -> unit

avio-open: func(avformat-context: Pointer, filename: string) -> u32
avio-closep: func(avformat-context: Pointer) -> unit
